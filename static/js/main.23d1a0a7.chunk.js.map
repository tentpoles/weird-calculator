{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","id","value","checked","firstInput","setFirstInput","secondInput","setSecondInput","lastInput","setLastInput","result","setResult","error","setError","operator","setOperator","inputController","firstInputForm","document","querySelector","secondInputForm","lastInputForm","getCopy","parseInt","checkboxController","firstCheckbox","secondCheckbox","lastCheckbox","radioButtonController","e","target","useEffect","tmpResult","numbers","countTrue","forEach","number","i","length","calculate","className","type","onChange","placeholder","htmlFor","name","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.23d1a0a7.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst App = () => {\n\n  const [firstInput, setFirstInput] = useState({id: 1, value: '', checked: false});\n  const [secondInput, setSecondInput] = useState({id: 2, value: '', checked: false});\n  const [lastInput, setLastInput] = useState({id: 3, value: '', checked: false});\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(false);\n  const [operator, setOperator] = useState('');\n\n  const inputController = () => {\n    const firstInputForm = document.querySelector('#first-input');\n    const secondInputForm = document.querySelector('#second-input');\n    const lastInputForm = document.querySelector('#last-input');\n    setFirstInput(getCopy => ({...getCopy, value: firstInputForm.value === '' ? '' : parseInt(firstInputForm.value)}));\n    setSecondInput(getCopy => ({...getCopy, value: secondInputForm.value === '' ? '' : parseInt(secondInputForm.value)}));\n    setLastInput(getCopy => ({...getCopy, value: lastInputForm.value === '' ? '' : parseInt(lastInputForm.value)}));\n  }\n\n  const checkboxController  = () => {\n    const firstCheckbox = document.querySelector('#first-checkbox').checked;\n    const secondCheckbox = document.querySelector('#second-checkbox').checked;\n    const lastCheckbox = document.querySelector('#last-checkbox').checked;\n    setFirstInput(getCopy => ({...getCopy, checked: firstCheckbox}));\n    setSecondInput(getCopy => ({...getCopy, checked: secondCheckbox}));\n    setLastInput(getCopy => ({...getCopy, checked: lastCheckbox}));\n  }\n\n  const radioButtonController  = (e) => {\n    setOperator(e.target.value);\n  }\n\n  useEffect(() => {\n    const calculate = () => {\n      let tmpResult = null;\n      let numbers = [];\n      let countTrue = 0;\n      numbers = [...numbers, firstInput, secondInput, lastInput];\n      numbers.forEach((number) => {\n        if(number.checked === true) {\n          countTrue = countTrue + 1;\n        }\n      })\n      if(operator !== '') {\n        if(countTrue > 1 || countTrue === 0) {\n          for(let i = 0; i < numbers.length; i++) {\n            if(numbers[i].checked === true) {\n              if(tmpResult === null) {\n                 tmpResult = numbers[i].value;\n              }\n              else {\n                if(operator === 'plus') {\n                  tmpResult = tmpResult + numbers[i].value;\n                }\n                else if(operator === 'minus') {\n                  tmpResult = tmpResult - numbers[i].value;\n                }\n                else if(operator === 'times') {\n                  tmpResult = tmpResult * numbers[i].value;\n                }\n                else if(operator === 'divide') {\n                  tmpResult = tmpResult / numbers[i].value;\n                }\n              }\n            }\n          }\n          setError(false);\n        }\n        else {\n          setError(true);\n        }\n        setResult(tmpResult);\n      }\n    }\n    calculate();\n  }, [firstInput, secondInput, lastInput, operator]);\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"input-group-container\">\n        <div className=\"input-group\">\n          <input type=\"number\" value={firstInput.value} onChange={inputController} id=\"first-input\" className=\"input-number\" placeholder=\"First number...\"/>\n          <label htmlFor=\"first-checkbox\" className='label-group'>\n            <input type=\"checkbox\" onChange={checkboxController} id=\"first-checkbox\" className=\"checkbox\"/>\n            <i className=\"fas fa-toggle-on\"></i>\n          </label>\n        </div>\n        <div className=\"input-group\">\n          <input type=\"number\" value={secondInput.value} onChange={inputController} id=\"second-input\" className=\"input-number\" placeholder=\"Second number...\" />\n          <label htmlFor=\"second-checkbox\" className='label-group'>\n            <input type=\"checkbox\" onChange={checkboxController} id=\"second-checkbox\" className=\"checkbox\"/>\n            <i className=\"fas fa-toggle-on\"></i>\n          </label>\n        </div>\n        <div className=\"input-group\">\n          <input type=\"number\" value={lastInput.value} onChange={inputController} id=\"last-input\" className=\"input-number\" placeholder=\"Last number...\" />\n          <label htmlFor=\"last-checkbox\" className='label-group'>\n            <input type=\"checkbox\" onChange={checkboxController} id=\"last-checkbox\" className=\"checkbox\"/>\n            <i className=\"fas fa-toggle-on\"></i>\n          </label>\n        </div>\n      </div>\n      <div className=\"radio-group-container\">\n        <div className=\"radio-group\">\n          <div className=\"radio-card\">\n            <input type=\"radio\" value=\"plus\" name=\"operator\" id=\"plus\" onChange={radioButtonController} className=\"radio-button\" />\n            <label htmlFor=\"plus\" className=\"operator-value\" title=\"Plus\">\n              <i className=\"fas fa-plus\"></i>\n            </label>\n          </div>\n        </div>\n        <div className=\"radio-group\">\n          <div className=\"radio-card\">\n            <input type=\"radio\" value=\"minus\" name=\"operator\" id=\"minus\" onChange={radioButtonController} className=\"radio-button\" />\n            <label htmlFor=\"minus\" className=\"operator-value\" title=\"Minus\">\n              <i className=\"fas fa-minus\"></i>\n            </label>\n          </div>\n        </div>\n        <div className=\"radio-group\">\n          <div className=\"radio-card\">\n            <input type=\"radio\" value=\"times\" name=\"operator\" id=\"times\" onChange={radioButtonController} className=\"radio-button\" />\n            <label htmlFor=\"times\" className=\"operator-value\" title=\"Times\">\n              <i className=\"fas fa-times\"></i>\n            </label>\n          </div>\n        </div>\n        <div className=\"radio-group\">\n          <div className=\"radio-card\">\n            <input type=\"radio\" value=\"divide\" name=\"operator\" id=\"divide\" onChange={radioButtonController} className=\"radio-button\" />\n            <label htmlFor=\"divide\" className=\"operator-value\" title=\"Divide\">\n              <i className=\"fas fa-divide\"></i>\n            </label>\n          </div>\n        </div>\n      </div>\n      <div className=\"result-container\">\n        <div className=\"line-break\"></div>\n        <div className=\"result-value\">\n          <span>Result:</span>\n          <span><span className=\"valid-value\">{result}</span> {error ? <span className=\"error-value\">Error!</span> : <></>}</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}